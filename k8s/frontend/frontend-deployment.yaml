apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ski-resort
  labels:
    app: frontend
    component: web
    version: v1
spec:
  replicas: 3  # for high availability
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Ensure zero downtime
  template:
    metadata:
      labels:
        app: frontend
        component: web
        version: v1
    spec:
      containers:
        - name: frontend
          image: deajadrovska/ski-resort-frontend:latest
          ports:
            - containerPort: 80
              name: http

          env:
            # React app configuration from ConfigMap
            - name: REACT_APP_API_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: REACT_APP_API_URL
            - name: REACT_APP_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: REACT_APP_ENVIRONMENT
            - name: REACT_APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: REACT_APP_NAME

          volumeMounts:
            # Mount custom nginx configuration
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf

          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

      volumes:
        # Nginx configuration from ConfigMap
        - name: nginx-config
          configMap:
            name: frontend-config
            items:
              - key: nginx.conf
                path: nginx.conf

      # Wait for backend to be ready
      initContainers:
        - name: wait-for-backend
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for backend service to be ready..."
              until nc -z backend-service 5000; do
                echo "Backend not ready, sleeping..."
                sleep 5
              done
              echo "Backend is ready!"