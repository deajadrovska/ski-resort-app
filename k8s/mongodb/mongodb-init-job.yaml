apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-replica-set-init
  namespace: ski-resort
  labels:
    app: mongodb
    component: init
spec:
  template:
    metadata:
      labels:
        app: mongodb-init
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mongodb-init
          image: mongo:7.0
          command:
            - /bin/bash
            - -c
            - |
              set -e
              echo "Waiting for MongoDB pods to be ready..."
              
              # Wait for all MongoDB pods to be accessible
              for i in 0 1 2; do
                until mongosh --host mongodb-${i}.mongodb-headless.ski-resort.svc.cluster.local:27017 --eval "print('MongoDB ${i} is ready')" --quiet; do
                  echo "Waiting for mongodb-${i}..."
                  sleep 10
                done
              done
              
              echo "All MongoDB pods are ready. Initializing replica set..."
              
              # Initialize replica set
              mongosh --host mongodb-0.mongodb-headless.ski-resort.svc.cluster.local:27017 --eval "
                rs.initiate({
                  _id: 'rs0',
                  members: [
                    { _id: 0, host: 'mongodb-0.mongodb-headless.ski-resort.svc.cluster.local:27017', priority: 2 },
                    { _id: 1, host: 'mongodb-1.mongodb-headless.ski-resort.svc.cluster.local:27017', priority: 1 },
                    { _id: 2, host: 'mongodb-2.mongodb-headless.ski-resort.svc.cluster.local:27017', priority: 1 }
                  ]
                })
              "
              
              echo "Waiting for replica set to stabilize..."
              sleep 30
              
              # Check replica set status
              mongosh --host mongodb-0.mongodb-headless.ski-resort.svc.cluster.local:27017 --eval "rs.status()"
              
              echo "MongoDB replica set initialization completed!"
      initContainers:
        - name: wait-for-mongodb
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for MongoDB StatefulSet to be ready..."
              until nslookup mongodb-0.mongodb-headless.ski-resort.svc.cluster.local && \
                    nslookup mongodb-1.mongodb-headless.ski-resort.svc.cluster.local && \
                    nslookup mongodb-2.mongodb-headless.ski-resort.svc.cluster.local; do
                echo "Waiting for MongoDB DNS resolution..."
                sleep 5
              done
              echo "All MongoDB pods have DNS entries!"